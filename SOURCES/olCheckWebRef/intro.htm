<!DOCTYPE html>
<html>
<head>
<title>
    CHECKSHOT
</title>
</head>
<body bgcolor="#000000" text="#ffffff" link="#0088ff" vlink="#0088ff" alink="#0088ff">
<font face="Arial">
<center>
<h1>
    CHECKSHOT
</h1>
<table border="1" width="800" cellpadding="5" cellspacing="1">
<tr>
    <td align="center" valign="top" colspan="2" bgcolor="#0088ff">
        PRESENTATION
    </td>
</tr>
<tr>
<tr>
    <td align="left" valign="top">

<!--<listing>-->
<font size="2">

<h2><u>CheckShot </u></h2>

Verifies sub-directories integrity of a post-production project.
<br>
<br>



<hr noshade>
<h3><u>Scenario :</u></h3>
Images are rendered on computers/renderfarms and dropped on a server.
<br>
As the tree structure can be different in each project, SeqCheck
will only be run at the sequence level. (Sequence/Shots/Images)
<br>
<br>




<hr noshade>
<h3><u>Main purpose : </u></h3>
  Check if the shots directories contain :
<br><font color="#aaaaaa">
<li>The file (.bounds) identifying the required start/end bounds of the shot.</li>
<li>The adequacy with the number of images found.</li>
<li>Files with the correct number of fields (name.number.extension)</li>
<li>Files with the correct numerical field (4 digits, ie ####)</li>
<li>Files with the correct extension</li>
<li>Files with non-zero weight</li>
<li>All the requested images, searching for missing files</li>
</font>
<br>



<hr noshade>
<h3><u>Usage :</u></h3>
The tool is usable in a punctual case as well as on daily/hourly checks.
<br>
<br>
It can be launched by a cron task, or a customized script.
<br><font color="#aaaaaa">
<li>If launched manually, the script generates a human readable report,
that highlights the possible mistakes found.</li>
<li>It can be launched shot by shot, or more globally in a sequence.</li>
<li>If automated, the user will be able to check the web version
of the dump, which can be seen on any device that handles http pages.</li>
<li>In both cases, it will also generate a log report that would rather
be intended for system administrators.</li>
<br>
</font>
The web-tool is intended for post-production supervisors, who can quickly
glance at shots in progress, see the possible errors, or simply check
the calculation progress.
<br>
<br>




<hr noshade>
<h3><u>Requirements :</u></h3>
Python3 must be installed on the server if automated, 
or on the client in case of a network-shared usage.
<br>
It runs on Linux and Windows (with cygwin).
<br>
<br>
Needed in the installation directory :
<font color="#aaaaaa">
<br>
<dl>
  <li>olCheckSeq.py</li>
<br>
  <li>olCheckShot.py</li>
</font>
<br>
and the subDirectories :
<font color="#aaaaaa">
<br>
<dl>
  <li>olCheckLibs/</li>
    <dd>olCheckLib.py</dd>
    <dd>olHtmlLib.py</dd>
</dl>

<dl>
  <li>olCheckWebRef/</li>
    <dd>index.htm</dd>
    <dd>intro.htm</dd>
    <dd>seqReport.htm</dd>
<br>
</font>







<hr noshade>
<h3><u>Installation :</u></h3>
Go to the place where you want to install the program.
<br>
<br>
<font color="#ff8800">
&nbsp;&nbsp;&nbsp;&nbsp; Download the .zip archive of the program 
</font>
<a href="https://github.com/OL-GIT/CheckShot/archive/refs/heads/main.zip">here</a>.
<br>
<br>
or type :
<br>
<br>
<center>
<table border="0" width="95%" bgcolor="#888888"><tr><td><listing>
$ git clone https://github.com/OL-GIT/CheckShot.git
</td></tr></table>
</center>
<br>
<br>

then proceed with the installation :
<br>
<br>
<center>
<table border="0" width="95%" bgcolor="#888888"><tr><td><listing>
$ cd CheckShot/SOURCES
$ chmod 774 ./install.bash
$ sudo ./install.bash
</td></tr></table>
</center>
<br>
<br>


<hr noshade>
<h3><u>Method :</u></h3>
olCheckSeq.py can be run at the sequence level.
<br>
You need to specify the name of the shots you want to check :
<br>
<br>
<center>
<table border="0" width="95%" bgcolor="#888888"><tr><td><listing>
$ python3 olCheckSeq.py P1 P2 P3
$ python3 olCheckSeq.py P*
$ python3 olCheckSeq.py *
</td></tr></table>
</center>
<br>
olCheckShot.py can be run at the shot level. It does not need any argument :
<br>
<br>
<center>
<table border="0" width="95%" bgcolor="#888888"><tr><td><listing>
$ python3 olCheckShot.py
</td></tr></table>
</center>
<br>
<br>




<hr noshade>
<h3><u>Results :</u></h3>
<li>If launched manually, checkSeq and checkShot will display the results in the console.
<br><font color="#aaaaaa">
&nbsp;&nbsp;&nbsp;&nbsp; | This method is recommended for punctual needs.
</font>
<br>
<br>

<li>The HTML minisite will be found in $PROJ/$SEQ/.web/index.htm
<br><font color="#aaaaaa">
&nbsp;&nbsp;&nbsp;&nbsp; | It will display seqreport.htm in the left frame.
<br>
&nbsp;&nbsp;&nbsp;&nbsp; | The shot reports are written in $PROJ/$SEQ/$SHOT/report.htm
<br>
&nbsp;&nbsp;&nbsp;&nbsp; | They will we displayed in the right frame of the minisite.
<br>
&nbsp;&nbsp;&nbsp;&nbsp; | Archived versions of report.htm are copied to report_$PROJ_$SEQ_$SHOT_DATE_TIME.htm
</font>
<br>
<br>

<li>The global log files will be found in $PROJECT/LOGS/ (olCheckSeqlog.DATE-TIME.txt)
<br><font color="#aaaaaa">
&nbsp;&nbsp;&nbsp;&nbsp; | They contain short versions of the console dumps.
</font>

<br>
<br>

    </td>
</tr>
</tr>
</table>

</html>
